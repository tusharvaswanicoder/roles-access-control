import e,{createContext as r,useContext as o,useState as n,useCallback as s,useEffect as t}from"react";import{useNavigate as i}from"react-router-dom";const l=r(null),u=({currentUserRole:r,rolesAccesses:o,children:n})=>e.createElement(l.Provider,{value:[r,o]},n),c=({allowedRoles:e,permissionsRequired:r})=>{const[i,u]=o(l),[c,d]=n(!0),[p,f]=n(null),m=s((()=>{if(!e.includes(i))return!1;const o=e=>{if("and"===e.type){for(let r of e.permissions){if("object"==typeof r)return o(r);if(!u[i].includes(r))return!1}return!0}for(let r of e.permissions){if("object"==typeof r)return o(r);if(u[i].includes(r))return!0}return!1};return"string"==typeof r?u[i].includes(r):o(r)}),[i,u,e,r]);return t((()=>{f(m()),d(!1)}),[i,u,m]),[c,p]},d=({children:e,fallbackComponent:r,allowedRoles:o=[],permissionsRequired:n})=>{const[s,t]=c({allowedRoles:o,permissionsRequired:n});return s?null:t?e:r},p=({children:e,fallbackComponent:r,redirectTo:n,allowedRoles:s=[]})=>{const[u]=o(l),c=i();return t((()=>{n&&!s.includes(u)&&c(n)}),[n,c,s,u]),s.includes(u)?e:r},f=(...e)=>({type:"or",permissions:e}),m=(...e)=>({type:"and",permissions:e});export{d as ComponentAccess,l as RolesAccessControlContext,u as RolesAccessControlContextProvider,p as RouteAccess,m as and,f as or,c as useComponentAccess};
